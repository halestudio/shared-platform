interface Const {
	static final String DEF_VERSION = '5.3.23'
	static final String SPRING_GROUP = 'org.springframework'
	static final String SECURITY_GROUP = 'org.springframework.security'
}

/**
 * Include Spring core bundles and ensure a common version for spring bundles.
 */
def springCore(String springVersion = Const.DEF_VERSION) {
	def springGroup = Const.SPRING_GROUP
	
	configurations {
		bndplatform {
			resolutionStrategy.eachDependency {
				if (it.requested.group == Const.SPRING_GROUP || it.requested.group == Const.SECURITY_GROUP) {
					it.useTarget(
						group: it.requested.group,
						name: it.requested.name,
						version: springVersion // fixed version for all spring dependencies
					)
				}
			}
		}
	}
	
	platform {
		feature id: 'platform.shared.spring.core',
				name: 'Spring Framework Core',
				version: springVersion, {
			bundle group: springGroup, name: 'spring-core', version: springVersion
		}
	}
}

/**
 * Add spring core and a set of default bundles to the platform.
 */
def spring(String springVersion = Const.DEF_VERSION, List<String> modules = [
	'spring-beans',
	'spring-context',
	'spring-context-support'
]) {
	def springGroup = Const.SPRING_GROUP
	springCore(springVersion)
	
	platform {
		feature id: 'platform.shared.spring.modules',
				name: 'Spring Framework Modules',
				version: springVersion, {
			modules.each {
				plugin group: springGroup, name: it, version: springVersion
			}
			
			includes << 'platform.shared.spring.core'
		}
	}
}

/**
 * Add spring core and a set of default bundles to the platform.
 */
def security(String springVersion = Const.DEF_VERSION, List<String> modules = [
	'spring-security-core'
]) {
	def springGroup = Const.SECURITY_GROUP
	springCore(springVersion)
	
	platform {
		feature id: 'platform.shared.spring.security',
				name: 'Spring Security',
				version: springVersion, {
			modules.each {
				plugin group: springGroup, name: it, version: springVersion
			}
			// need to get rid of spring-jcl org.springframework.spring-jcl / org.springframework.spring-jcl

			includes << 'platform.shared.spring.core'
		}
	}
}